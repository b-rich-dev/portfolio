@use 'mixin';

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    scroll-behavior: smooth;
}

html {
    font-size: 16px;
}


body {
    --sb-track-color: var(--dark);
    --sb-thumb-color: var(--turquoise);
    --sb-size: 8px;
    background-color: var(--dark);
}

body::-webkit-scrollbar {
    width: var(--sb-size)
}

body::-webkit-scrollbar-track {
    background: var(--sb-track-color);
    border-radius: 4px;
}

body::-webkit-scrollbar-thumb {
    background: var(--sb-thumb-color);
    border-radius: 4px;

}

@supports not selector(::-webkit-scrollbar) {
    body {
        scrollbar-color: var(--sb-thumb-color) var(--sb-track-color);
    }
}

:root {
    --light-turquoise: #00ffc3;
    --turquoise: #3DCFB6;
    --dark-turquoise: #267e6e;
    --turquoise-hover: rgba(61, 207, 182, 0.6);
    --dark: #1C1C1C;
    --dark-green: #08463B;
    --white: #FFFFFF;
    --light-grey: rgba(255, 255, 255, 0.8);
    --warn: rgba(236, 123, 123, 0.8);
}

.d-none {
    display: none;
}

a {
    text-decoration: none;
    color: var(--white);
}

h2 {
    @include mixin.font-fira-code($fs: 4rem, $fw: 700, $c: var(--turquoise));
    padding-bottom: 20px;
}

.btn {
    height: 48px;
    border: 1px solid var(--white);
    border-radius: 100px;
    padding: 0px 24px;
    overflow: hidden;
    position: relative;
    @include mixin.dFlex($ai: center, $jc: center);
    @include mixin.font-karla($fs: 1.12rem);

    &:hover {
        border-color: var(--turquoise);

        span {
            animation: scroll-text-button 3s linear infinite;
            color: var(--turquoise);
            transition: none;
        }
    }

    &:not(:hover) {
        span {
            animation: none;
            transform: translateX(0);
            transition: transform 3.5s ease-out;
        }
    }

    span {
        display: inline-block;
        white-space: nowrap;
        transition: transform 1.5s ease-out, color 0.3s ease-out;
        will-change: transform;
    }
}

@keyframes scroll-text-button {
    0% {
        transform: translateX(0);
    }

    50% {
        transform: translateX(-150%);
    }

    50.01% {
        transform: translateX(150%);
    }

    100% {
        transform: translateX(0);
    }
}